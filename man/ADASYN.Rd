% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ADASYN.R
\name{ADASYN}
\alias{ADASYN}
\title{The ADASYN algorithm.}
\usage{
ADASYN(data, perc_min = 50, perc_over = NULL, k = 5, classes = NULL)
}
\arguments{
\item{data}{A data frame containing the predictors and the outcome. The 
predictors must be numeric and the outcome must be both a binary valued 
factor and the last column of \code{data}.}

\item{perc_min}{The desired \% size of the minority class relative to the
whole data set. For instance, if \code{perc_min} = 50 the returned data
set is balanced. \code{perc_min} is ignored if \code{perc_over} is
specified.}

\item{perc_over}{\% of examples to append to the input data set relative
to the size of the minority class. For instance, if \code{perc_over} = 100
the minority class doubles in size. If specified, \code{perc_min} is
ignored.}

\item{k}{Number of nearest neighbours to compute for each example in the 
minority class.}

\item{classes}{A named vector identifying the majority and the minority
classes. The names must be "Majority" and "Minority". This argument is
only useful if the function is called inside another sampling function.}
}
\value{
A data frame containing a more balanced version of the input data 
 set after over-sampling it with ADASYN.
}
\description{
\code{ADASYN} over-samples the input data using the Adaptive Synthetic 
Sampling algorithm.
}
\details{
ADASYN is an adaptation of the SMOTE algorithm which focuses on 
synthesising more examples for the minority examples that are considered 
"hard" to learn. The learning hardness of a minority example is defined as 
being proportional to the number of majority examples among the \code{k} 
nearest neighbours of the minority example. There are two cases where 
no examples are synthesised for a minority example. The first case is when 
all \code{k} nearest neighbours belong to the majority class and the 
minority examples is considered to be noise. The second case is when all 
\code{k} nearest neighbours belong to the minority class and the minority 
example is considered too easy to learn (learning hardness = 0).

Compared to ADASYN's original description, the current implementation has 
a few differences. Firstly, the \eqn{d_{th}} parameter was dropped.
Secondly, the \eqn{\beta} parameter was replaced by \code{perc_min} and 
\code{perc_over} parameters. The modification allows the user to synthesise
as many examples as wanted and \eqn{\beta = 1} is equivalent to
\code{perc_min} = 50 (balance the distribution of examples).
}
\references{
He, H., Bai, Y., Garcia, E. A., & Li, S. (2008, June). ADASYN:
 Adaptive synthetic sampling approach for imbalanced learning. In
 \emph{Neural Networks, 2008. IJCNN 2008.(IEEE World Congress on
 Computational Intelligence). IEEE International Joint Conference on}
 (pp. 1322-1328). IEEE.
}
